static Future<List<MainCommentDataModel>> getComment() async {
    List response = [];
    List<MainCommentDataModel> returnList = [];
    MainCommentDataModel mainContentDataModel = MainCommentDataModel(userId: 'kk',visible: '1',createTime: '2300', comment: '안녕하세요 ㅋ11');
    returnList.add(mainContentDataModel);
    MainCommentDataModel mainContentDataModel2 = MainCommentDataModel(userId: 'kk',visible: '1',createTime: '2300', comment: '안녕하세요 ㅋ22');
    returnList.add(mainContentDataModel2);
    MainCommentDataModel mainContentDataModel3 = MainCommentDataModel(userId: 'kk',visible: '1',createTime: '2300', comment: '안녕하세요 ㅋ33');
    returnList.add(mainContentDataModel3);
    returnList.add(mainContentDataModel3);
    returnList.add(mainContentDataModel3);
    // await NodeServer.getAllContents().then((value) => {response = value});
    //
    // try {
    //   if (response.first == 'pass') {
    //     response = response.last;
    //     response.forEach((element) {
    //       MainContentDataModel mainContentDataModel = MainContentDataModel.fromJson(jsonDecode(jsonEncode(element)));
    //       returnList.add(mainContentDataModel);
    //     });
    //   }
    // } catch (e) {
    //   print('오오오오오오오오오오억 *-* ($e)');
    // }
    //returnList = returnList.reversed.toList();
    return returnList;
  }

  static Future<bool> setCommentEx() async {
    bool result = false;


    return result;
  }

  static Future<bool> setComment({required String value, required int index, required MainContentDataModel item, required String userId, required BuildContext context}) async {
    bool result = false;
    print('setcomment pass');
    print(' value  : $value');
    print(' index : $index');
    print(' userid : $userId');
    print(' contentId : ${item.contentId}');
    print('setcomment pass');
    var contentEncode = utf8.encode(value);//변환후 입력해야함
    MainCommentDataModel mainCommentDataModel = MainCommentDataModel(comment: '$contentEncode', userId: userId, createTime: '${DateTime.now()}', visible: '1');
    await NodeServer.setComment(comment: mainCommentDataModel, contentId: item.contentId).then((value) => {
      result = value
    });
    if(result){
      //html.window.location.reload();

    }

    return result;
  }